n = seq(0, 100, by = 0.1)
plot(n, log(n), col = "blue", type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = "green", type = "l")
lines(n, n*n, col = "red", type = "l")
legend("topleft", "log(n)", "n", "n*n")
}
order.of.growth()
#########################################################
order.of.growth <- function(){
n = seq(0, 100, by = 0.1)
plot(n, log(n), col = "blue", type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = "green", type = "l")
lines(n, n*n, col = "red", type = "l")
legend("topleft", c("log(n)", "n", "n*n"))
}
order.of.growth()
#########################################################
order.of.growth <- function(){
n = seq(0, 100, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*n, col = 3, type = "l")
legend("topleft", c("log(n)", "n", "n*n"), col = 1:7)
}
order.of.growth()
#########################################################
order.of.growth <- function(){
n = seq(0, 100, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*n, col = 3, type = "l")
legend("topleft", c("log(n)", "n", "n*n"), col = 1:7)
}
order.of.growth()
#########################################################
order.of.growth <- function(){
n = seq(0, 100, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*n, col = 3, type = "l")
legend("topleft", c("log(n)", "n", "n*n"), col = 1:7,lty = 1)
}
order.of.growth()
#########################################################
order.of.growth <- function(){
n = seq(0, 100, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 2, type = "l")
lines(n, n*n, col = 3, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n"), col = 1:7,lty = 1)
}
order.of.growth()
#########################################################
order.of.growth <- function(){
n = seq(0, 100, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n"), col = 1:7,lty = 1)
}
order.of.growth()
#########################################################
order.of.growth <- function(){
n = seq(0, 10, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n"), col = 1:7,lty = 1)
}
order.of.growth()
#########################################################
order.of.growth <- function(){
n = seq(0, 20, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n"), col = 1:7,lty = 1)
}
order.of.growth()
#########################################################
order.of.growth <- function(){
n = seq(0, 50, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n"), col = 1:7,lty = 1)
}
order.of.growth()
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n"), col = 1:7,lty = 1)
}
order.of.growth(30)
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
lines(n, 2*n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n", "2*n"), col = 1:5,lty = 1)
}
order.of.growth(30)
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
lines(n, 2*n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n", "2*n"), col = 1:5,lty = 1)
}
order.of.growth(40)
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
lines(n, 2*n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n", "2*n"), col = 1:5,lty = 1)
}
order.of.growth(100)
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
lines(n, 2*n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n", "2*n"), col = 1:5,lty = 1)
}
order.of.growth(1000)
2^3
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
lines(n, 2^n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n", "2^n"), col = 1:5,lty = 1)
}
order.of.growth(30)
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
lines(n, 2^n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n", "2^n"), col = 1:5,lty = 1)
}
order.of.growth(10)
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(fn)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
lines(n, 2^n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n", "2^n"), col = 1:5,lty = 1)
}
order.of.growth(5)
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(2^n)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
lines(n, 2^n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n", "2^n"), col = 1:5,lty = 1)
}
order.of.growth(5)
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(2^n)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
lines(n, 2^n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n", "2^n"), col = 1:5,lty = 1)
}
order.of.growth(10)
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(2^n)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
lines(n, 2^n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n", "2^n"), col = 1:5,lty = 1)
}
order.of.growth(5)
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(2^n)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
lines(n, 2^n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n", "2^n"), col = 1:5,lty = 1)
}
order.of.growth(3)
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(2^n)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
# lines(n, 2^n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n", "2^n"), col = 1:5,lty = 1)
}
order.of.growth(3)
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(2^n)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
lines(n, 2^n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n", "2^n"), col = 1:5,lty = 1)
}
order.of.growth(3)
order.of.growth(30)
n = seq(0, 100, by = 0.1)
fn = 3*n + 10
c1gn = 3*n
c2gn = 4*n
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 50, by = 0.1)
fn = 3*n + 10
c1gn = 3*n
c2gn = 4*n
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 40, by = 0.1)
fn = 3*n*n + 20*n
c1gn = 3*n*n
c2gn = 4*n*n
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 50, by = 0.1)
fn = 3*n + 10
c1gn = 3*n
c2gn = 4*n
sandiwich(n, fn, c1gn, c2gn)
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(2^n)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
lines(n, 2^n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n", "2^n"), col = 1:5,lty = 1)
}
order.of.growth(30)
order.of.growth(10)
order.of.growth(3)
order.of.growth(100)
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(2^n)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
#lines(n, 2^n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n"), col = 1:5,lty = 1)
}
order.of.growth(30)
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(n*n)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
#lines(n, 2^n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n"), col = 1:5,lty = 1)
}
order.of.growth(30)
order.of.growth(20)
n = seq(0, 50, by = 0.1)
fn = 3*n + 10
c1gn = 3*n
c2gn = 4*n
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 40, by = 0.1)
fn = 3*n*n + 20*n
c1gn = 3*n*n
c2gn = 4*n*n
sandiwich(n, fn, c1gn, c2gn)
#########################################################
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(2^n)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
lines(n, 2^n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n", "2^n"), col = 1:5,lty = 1)
}
order.of.growth(30)
order.of.growth <- function(x){
n = seq(0, x, by = 0.1)
plot(n, log(n), col = 1, type = "l",
main = "Order of Growth",
ylim = c(0,max(n*n)))
grid()
lines(n, n, col = 2, type = "l")
lines(n, n*log(n), col = 3, type = "l")
lines(n, n*n, col = 4, type = "l")
#lines(n, 2^n, col = 5, type = "l")
legend("topleft", c("log(n)", "n", "n*log(n)","n*n"), col = 1:5,lty = 1)
}
order.of.growth(30)
order.of.growth(10)
order.of.growth(5)
order.of.growth(5000)
order.of.growth(10)
order.of.growth(3)
n = seq(0, 50, by = 0.1)
fn = 3*n + 10
c1gn = 3*n
c2gn = 4*n
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 5000, by = 0.1)
fn = 3*n + 10
c1gn = 3*n
c2gn = 4*n
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 5000, by = 0.1)
fn = 3*n + 10
c1gn = 2*n
c2gn = 4*n
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 50, by = 0.1)
#########################################################
n = seq(0, 40, by = 0.1)
fn = 3*n*n + 20*n
c1gn = 3*n*n
c2gn = 4*n*n
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 40, by = 0.1)
fn = 3*n*n + 20*n + log(n)
c1gn = 3*n*n
c2gn = 4*n*n
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 40, by = 0.1)
fn = 3*n*n + 20*n + log(n)
c1gn = 3*n*n
c2gn = 4*n*n
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 40, by = 0.1)
fn = 3*n*n*n + 20*n + log(n)
c1gn = 3*n*n
c2gn = 4*n*n
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 40, by = 0.1)
fn = 3*n*n*n + 20*n + log(n)
c1gn = 3*n*n*n
c2gn = 4*n*n*n
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 40, by = 0.1)
fn = 3*n*n*n + 20*n + log(n)
c1gn = 2*n*n*n
c2gn = 4*n*n*n
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 40, by = 0.1)
fn = 3*n*n*n + 20*n + log(n)
gn = n*n*n
c1gn = 2*gn
c2gn = 4*gn
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 40, by = 0.1)
fn = 3*n*log(n) + 20*n  + 789
gn = n*log(n)
c1gn = 2*gn
c2gn = 4*gn
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 40, by = 0.1)
fn = 3*n*log(n) + 20*n  + 3
gn = n*log(n)
c1gn = 2*gn
c2gn = 4*gn
sandiwich(n, fn, c1gn, c2gn)
n = seq(0, 40, by = 0.1)
fn = 3*n*log(n) + 20*n  + 3
gn = n*log(n)
c1gn = 2*gn
c2gn = 4*gn
sandiwich(n, fn, c1gn, c2gn)
sandiwich <- function(n, fn, c1gn, c2gn){
plot(n, fn, col = "blue", type = "l",
main = "fn is saniwiched between c1gn and c2gn"
#ylim = c(0,max(fn))
)
grid()
lines(n, c1gn, col = "red", type = "l")
lines(n, c2gn, col = "red", type = "l")
}
n = seq(0, 40, by = 0.1)
fn = 3*n*log(n) + 20*n  + 3
gn = n*log(n)
c1gn = 2*gn
c2gn = 4*gn
sandiwich(n, fn, c1gn, c2gn)
